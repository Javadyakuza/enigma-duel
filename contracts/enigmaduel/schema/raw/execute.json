{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "update_balance"
      ],
      "properties": {
        "update_balance": {
          "type": "object",
          "required": [
            "update_mode"
          ],
          "properties": {
            "update_mode": {
              "$ref": "#/definitions/UpdateBalanceMode"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_game_room"
      ],
      "properties": {
        "create_game_room": {
          "type": "object",
          "required": [
            "game_room_init_params"
          ],
          "properties": {
            "game_room_init_params": {
              "$ref": "#/definitions/GameRoomIntiParams"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "finish_game_room"
      ],
      "properties": {
        "finish_game_room": {
          "type": "object",
          "required": [
            "game_room_finish_params"
          ],
          "properties": {
            "game_room_finish_params": {
              "$ref": "#/definitions/GameRoomFinishParams"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "collect_fees"
      ],
      "properties": {
        "collect_fees": {
          "type": "object",
          "required": [
            "collect_fees_params"
          ],
          "properties": {
            "collect_fees_params": {
              "$ref": "#/definitions/CollectFeesParams"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "CollectFeesParams": {
      "type": "object",
      "required": [
        "amount",
        "receiver"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "receiver": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Cw20ReceiveMsg": {
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GameRoomFinishParams": {
      "type": "object",
      "required": [
        "game_room_id",
        "result"
      ],
      "properties": {
        "game_room_id": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/GameRoomStatus"
        }
      },
      "additionalProperties": false
    },
    "GameRoomIntiParams": {
      "type": "object",
      "required": [
        "contestant1",
        "contestant2",
        "prize_pool",
        "status"
      ],
      "properties": {
        "contestant1": {
          "type": "string"
        },
        "contestant2": {
          "type": "string"
        },
        "prize_pool": {
          "$ref": "#/definitions/Uint128"
        },
        "status": {
          "$ref": "#/definitions/GameRoomStatus"
        }
      },
      "additionalProperties": false
    },
    "GameRoomStatus": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "started"
          ],
          "properties": {
            "started": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "win"
          ],
          "properties": {
            "win": {
              "type": "object",
              "required": [
                "addr"
              ],
              "properties": {
                "addr": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "draw"
          ],
          "properties": {
            "draw": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UpdateBalanceMode": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "deposit"
          ],
          "properties": {
            "deposit": {
              "type": "object",
              "required": [
                "amount"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "user": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw"
          ],
          "properties": {
            "withdraw": {
              "type": "object",
              "required": [
                "amount",
                "receiver"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "receiver": {
                  "type": "string"
                },
                "user": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
